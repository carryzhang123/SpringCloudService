server:
  port: 8080
spring:
  application:
    name: consumer # 应用名称
eureka: # eureka服务注册
  client:
    service-url: # EurekaServer地址
      defaultZone: http://127.0.0.1:10086/eureka
    registry-fetch-interval-seconds: 30 # 30秒获取server服务信息

hystrix: # 熔断机制
  command:
    default:
      execution.isolation.thread.timeoutInMilliseconds: 2000 # 超过2秒后触发
      circuitBreaker.requestVolumeThreshold: 10 # 触发熔断的最小请求次数，默认20,10s内请求失败数量达到10个,断路器开
      circuitBreaker.sleepWindowInMilliseconds: 10000 #  短路多久以后开始尝试是否恢复,默认是5000毫秒
      circuitBreaker.errorThresholdPercentage: 50 # 触发熔断的失败请求最小占比，默认50%

ribbon: # 负载均衡，ribbon有重试机制，一旦超时，会自动重新发起请求，feign嵌入了负载均衡ribbon
  ConnectTimeout: 500 # 连接超时时长
  ReadTimeout: 2000 # 数据通信超时时长
  MaxAutoRetries: 0 # 当前服务器的重试次数
  MaxAutoRetriesNextServer: 1 # 重试多少次服务
  OkToRetryOnAllOperations: false # 是否对所有的请求方式都重试

feign:
  hystrix:
    enabled: true # 开启Feign的熔断功能
  compression:
    request:
      enabled: true #开启请求压缩
      mime-types: text/html,application/xml,application/json # 设置压缩的数据类型
      min-request-size: 2048 # 设置触发压缩的大小下限
    response:
      enabled: true # 开启响应压缩

logging:
  level:
    cn.itcast: debug